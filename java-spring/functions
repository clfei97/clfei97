public class usefulFunctions {

  public String[] getStringListFromString(String string) {
		    return string.split("\\s*,\\s*");
	}

  private ResponseEntity<?> composeStandardResponse(boolean success, HttpStatus httpStatus, String message) {
        Map<String, Object> response = new LinkedHashMap<>();
        response.put("Success", success);
        response.put("Status", httpStatus);
        response.put("Message", message);
        HttpHeaders headers = new HttpHeaders();
        return new ResponseEntity<>(response, headers, httpStatus);
    }
    
  private ResponseEntity<?> callGetApiWithParam(){
        MultiValueMap<String, String> map = new LinkedMultiValueMap<>();
        map.add("param1", "param1");
        map.add("param2", "param2");
        UriComponentsBuilder builder = UriComponentsBuilder.fromUriString(www.apiurl.com).queryParams(map);
        String finalUrl = builder.build(false).toUriString();

        HttpHeaders headers = new HttpHeaders();
        headers.set("header", "headervalue");
        HttpEntity<String> entity = new HttpEntity<>(headers);
        
        RestTemplate restTemplate = getResponse(finalUrl);
        return restTemplate.exchange(finalUrl, HttpMethod.GET, entity, ResponsePojo/String.class);
  }
  
  private ResponseEntity<?> callPostApiWithJson(){
        HttpHeaders headers = new HttpHeaders();
        headers.set("Content-Type", "application/json");
        
        JsonPojo pojo = new JsonPojo();
        pojo.setValue1("value1");
        pojo.setValue2("value2");
        
        ObjectMapper mapper = new ObjectMapper();
            
        String bodyString = mapper.writeValueAsString(pojo);
        
        HttpEntity<String> entity = new HttpEntity<String>(bodyString, headers);
        RestTemplate restTemplate = getResponse("www.apiurl.com");
        
        return restTemplate.exchange("www.apiurl.com", HttpMethod.POST, entity, ResponsePojo/String.class);
  }
  
  private boolean isValidNameValidation(String name) {
	    	if (!StringUtils.isEmpty(name)) {
	    		//allow only alphabets, space and -' which -' cannot be alone
		        String regex = "([A-Za-z\\s]+(-|'))*((-|')([A-Za-z\\s]+))*[A-Za-z\\s]*";
		        Pattern pattern = Pattern.compile(regex);
		        Matcher matcher = pattern.matcher(name);
		        return matcher.matches();
	        }
	    	
	    	return false;
	    }
}
